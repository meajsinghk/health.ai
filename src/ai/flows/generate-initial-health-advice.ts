'use server';

/**
 * @fileOverview Provides initial health advice based on a general prompt.
 *
 * - generateInitialHealthAdvice - A function that generates initial health advice.
 * - GenerateInitialHealthAdviceInput - The input type for the generateInitialHealthAdvice function.
 * - GenerateInitialHealthAdviceOutput - The return type for the generateInitialHealthAdvice function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateInitialHealthAdviceInputSchema = z.object({
  prompt: z.string().describe('A general prompt describing the user health concerns.'),
});
export type GenerateInitialHealthAdviceInput = z.infer<
  typeof GenerateInitialHealthAdviceInputSchema
>;

const GenerateInitialHealthAdviceOutputSchema = z.object({
  advice: z.string().describe('The initial health advice generated by the AI.'),
});
export type GenerateInitialHealthAdviceOutput = z.infer<
  typeof GenerateInitialHealthAdviceOutputSchema
>;

export async function generateInitialHealthAdvice(
  input: GenerateInitialHealthAdviceInput
): Promise<GenerateInitialHealthAdviceOutput> {
  return generateInitialHealthAdviceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateInitialHealthAdvicePrompt',
  input: {schema: GenerateInitialHealthAdviceInputSchema},
  output: {schema: GenerateInitialHealthAdviceOutputSchema},
  prompt: `You are a friendly and helpful AI health assistant. A user has provided the following prompt: "{{prompt}}".  Provide some initial health advice to help them get started. `,
});

const generateInitialHealthAdviceFlow = ai.defineFlow(
  {
    name: 'generateInitialHealthAdviceFlow',
    inputSchema: GenerateInitialHealthAdviceInputSchema,
    outputSchema: GenerateInitialHealthAdviceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
